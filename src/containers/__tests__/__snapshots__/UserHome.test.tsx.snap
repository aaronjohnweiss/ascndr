// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserHome should render 1`] = `
<UserHome
  history={
    Object {
      "action": "REPLACE",
      "block": [Function],
      "canGo": [Function],
      "createHref": [Function],
      "entries": Array [
        Object {
          "hash": "",
          "pathname": "/",
          "search": "?n=60",
        },
      ],
      "go": [Function],
      "goBack": [Function],
      "goForward": [Function],
      "index": 0,
      "length": 1,
      "listen": [Function],
      "location": Object {
        "hash": "",
        "pathname": "/",
        "search": "?n=60",
      },
      "push": [Function],
      "replace": [Function],
    }
  }
  location={
    Object {
      "hash": "",
      "pathname": "/",
      "search": "?n=60",
    }
  }
  match={
    Object {
      "isExact": true,
      "params": Object {},
      "path": "/",
      "url": "/",
    }
  }
>
  <h2>
    Welcome
    , Mr. User
    !
  </h2>
  <ResponsiveActivityCalendar
    getData={[Function]}
    minCutoffDate={"2022-08-21T04:00:00.000Z"}
  >
    <div>
      <div
        className="d-flex justify-content-center mb-2"
      >
        <ActivityCalendar
          blockMargin={4}
          blockSize={12}
          data={Array []}
          fontSize={14}
          hideColorLegend={true}
          hideMonthLabels={false}
          hideTotalCount={true}
          style={Object {}}
          weekStart={0}
        />
      </div>
    </div>
  </ResponsiveActivityCalendar>
  <ActivityFeed>
    <div
      className="activity-feed"
    >
      <InfiniteScroll
        dataLength={60}
        hasMore={false}
        loader={<React.Fragment />}
        next={[Function]}
      >
        <div
          className="infinite-scroll-component__outerdiv"
          style={Object {}}
        >
          <div
            className="infinite-scroll-component "
            style={
              Object {
                "WebkitOverflowScrolling": "touch",
                "height": "auto",
                "overflow": "auto",
              }
            }
          >
            <FeedItemCard
              feedItem={
                Object {
                  "data": Object {
                    "_type": "workout",
                    "value": Object {
                      "key": "workoutA",
                      "value": Object {
                        "_type": "workout",
                        "categories": Array [],
                        "intensity": 0,
                        "startTime": 1671926400000,
                        "uid": "myUid",
                      },
                    },
                  },
                  "date": 1671926400000,
                  "uid": "myUid",
                }
              }
              gyms={
                Array [
                  Object {
                    "key": "gymA",
                    "value": Object {
                      "BOULDER_HEIGHT": "",
                      "LEAD_HEIGHT": "",
                      "TOP_ROPE_HEIGHT": "",
                      "_type": "gym",
                      "name": "",
                      "owner": "myUid",
                    },
                  },
                ]
              }
              key="0"
              routes={
                Array [
                  Object {
                    "key": "routeA",
                    "value": Object {
                      "_type": "route",
                      "grade": Object {
                        "difficulty": 7,
                        "style": "TOP_ROPE",
                      },
                      "gymId": "gymA",
                      "isRetired": false,
                      "name": "Unnamed",
                    },
                  },
                ]
              }
              sessions={
                Array [
                  Object {
                    "key": "sessionA",
                    "value": Object {
                      "_type": "session",
                      "customRoutes": Array [
                        Object {
                          "count": 1,
                          "key": "routeA",
                          "partials": Object {},
                        },
                      ],
                      "gymId": "gymA",
                      "standardRoutes": Array [],
                      "startTime": 0,
                      "uid": "myUid",
                    },
                  },
                ]
              }
              uid="myUid"
              users={
                Array [
                  Object {
                    "key": "myUserKey",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [
                        "uid0",
                        "uid1",
                        "uid2",
                        "uid3",
                        "uid4",
                      ],
                      "hiatuses": Array [],
                      "name": "Mr. User",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "myUid",
                    },
                  },
                  Object {
                    "key": "uid0-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 0",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid0",
                    },
                  },
                  Object {
                    "key": "uid1-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 1",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid1",
                    },
                  },
                  Object {
                    "key": "uid2-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 2",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid2",
                    },
                  },
                  Object {
                    "key": "uid3-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 3",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid3",
                    },
                  },
                  Object {
                    "key": "uid4-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 4",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid4",
                    },
                  },
                ]
              }
              workouts={
                Array [
                  Object {
                    "key": "workoutA",
                    "value": Object {
                      "_type": "workout",
                      "categories": Array [],
                      "intensity": 0,
                      "startTime": 1671926400000,
                      "uid": "myUid",
                    },
                  },
                ]
              }
            >
              <Card
                body={false}
              >
                <div
                  className="card"
                >
                  <CardBody>
                    <div
                      className="card-body"
                    >
                      <Container
                        fluid={false}
                      >
                        <div
                          className="container"
                        >
                          <Row>
                            <div
                              className="row"
                            >
                              <Col
                                xs={10}
                              >
                                <div
                                  className="col-10"
                                >
                                  <CardTitle
                                    className="w-100"
                                  >
                                    <ForwardRef
                                      className="w-100 card-title"
                                    >
                                      <div
                                        className="w-100 card-title h5"
                                      >
                                        You
                                      </div>
                                    </ForwardRef>
                                  </CardTitle>
                                  <CardSubtitle>
                                    <ForwardRef
                                      className="card-subtitle"
                                    >
                                      <div
                                        className="card-subtitle h6"
                                      >
                                        a few seconds ago
                                      </div>
                                    </ForwardRef>
                                  </CardSubtitle>
                                </div>
                              </Col>
                            </div>
                          </Row>
                        </div>
                      </Container>
                      <CardText
                        as="div"
                      >
                        <div
                          className="card-text"
                        >
                          <WorkoutCardBody
                            workout={
                              Object {
                                "key": "workoutA",
                                "value": Object {
                                  "_type": "workout",
                                  "categories": Array [],
                                  "intensity": 0,
                                  "startTime": 1671926400000,
                                  "uid": "myUid",
                                },
                              }
                            }
                          >
                            Workout Session (Intensity - 
                            0
                            ) 
                            <br />
                          </WorkoutCardBody>
                        </div>
                      </CardText>
                    </div>
                  </CardBody>
                </div>
              </Card>
            </FeedItemCard>
            <FeedItemCard
              feedItem={
                Object {
                  "data": Object {
                    "_type": "milestone",
                    "value": Object {
                      "grade": Object {
                        "difficulty": 7,
                        "style": "TOP_ROPE",
                      },
                      "unit": "grade",
                    },
                  },
                  "date": 0,
                  "link": "/sessions/sessionA",
                  "uid": "myUid",
                }
              }
              gyms={
                Array [
                  Object {
                    "key": "gymA",
                    "value": Object {
                      "BOULDER_HEIGHT": "",
                      "LEAD_HEIGHT": "",
                      "TOP_ROPE_HEIGHT": "",
                      "_type": "gym",
                      "name": "",
                      "owner": "myUid",
                    },
                  },
                ]
              }
              key="1"
              routes={
                Array [
                  Object {
                    "key": "routeA",
                    "value": Object {
                      "_type": "route",
                      "grade": Object {
                        "difficulty": 7,
                        "style": "TOP_ROPE",
                      },
                      "gymId": "gymA",
                      "isRetired": false,
                      "name": "Unnamed",
                    },
                  },
                ]
              }
              sessions={
                Array [
                  Object {
                    "key": "sessionA",
                    "value": Object {
                      "_type": "session",
                      "customRoutes": Array [
                        Object {
                          "count": 1,
                          "key": "routeA",
                          "partials": Object {},
                        },
                      ],
                      "gymId": "gymA",
                      "standardRoutes": Array [],
                      "startTime": 0,
                      "uid": "myUid",
                    },
                  },
                ]
              }
              uid="myUid"
              users={
                Array [
                  Object {
                    "key": "myUserKey",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [
                        "uid0",
                        "uid1",
                        "uid2",
                        "uid3",
                        "uid4",
                      ],
                      "hiatuses": Array [],
                      "name": "Mr. User",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "myUid",
                    },
                  },
                  Object {
                    "key": "uid0-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 0",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid0",
                    },
                  },
                  Object {
                    "key": "uid1-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 1",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid1",
                    },
                  },
                  Object {
                    "key": "uid2-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 2",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid2",
                    },
                  },
                  Object {
                    "key": "uid3-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 3",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid3",
                    },
                  },
                  Object {
                    "key": "uid4-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 4",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid4",
                    },
                  },
                ]
              }
              workouts={
                Array [
                  Object {
                    "key": "workoutA",
                    "value": Object {
                      "_type": "workout",
                      "categories": Array [],
                      "intensity": 0,
                      "startTime": 1671926400000,
                      "uid": "myUid",
                    },
                  },
                ]
              }
            >
              <withRouter(LinkContainer)
                className="link-card"
                to="/sessions/sessionA"
              >
                <LinkContainer
                  activeClassName="active"
                  className="link-card"
                  exact={false}
                  history={
                    Object {
                      "action": "REPLACE",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "?n=60",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "?n=60",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "?n=60",
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  replace={false}
                  strict={false}
                  to="/sessions/sessionA"
                >
                  <Route
                    exact={false}
                    path="/sessions/sessionA"
                    strict={false}
                  >
                    <Card
                      body={false}
                      className="link-card"
                      href="/sessions/sessionA"
                      onClick={[Function]}
                    >
                      <div
                        className="link-card card"
                        href="/sessions/sessionA"
                        onClick={[Function]}
                      >
                        <CardBody>
                          <div
                            className="card-body"
                          >
                            <Container
                              fluid={false}
                            >
                              <div
                                className="container"
                              >
                                <Row>
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      xs={10}
                                    >
                                      <div
                                        className="col-10"
                                      >
                                        <CardTitle
                                          className="w-100"
                                        >
                                          <ForwardRef
                                            className="w-100 card-title"
                                          >
                                            <div
                                              className="w-100 card-title h5"
                                            >
                                              You
                                            </div>
                                          </ForwardRef>
                                        </CardTitle>
                                        <CardSubtitle>
                                          <ForwardRef
                                            className="card-subtitle"
                                          >
                                            <div
                                              className="card-subtitle h6"
                                            >
                                              Dec 31st 1969
                                            </div>
                                          </ForwardRef>
                                        </CardSubtitle>
                                      </div>
                                    </Col>
                                    <Col
                                      className="d-flex flex-row justify-content-end"
                                      xs={2}
                                    >
                                      <div
                                        className="d-flex flex-row justify-content-end col-2"
                                      >
                                        <MilestoneIcon>
                                          <FaAward>
                                            <IconBase
                                              attr={
                                                Object {
                                                  "viewBox": "0 0 384 512",
                                                }
                                              }
                                            >
                                              <svg
                                                fill="currentColor"
                                                height="30"
                                                stroke="currentColor"
                                                strokeWidth="0"
                                                style={
                                                  Object {
                                                    "color": "goldenrod",
                                                  }
                                                }
                                                viewBox="0 0 384 512"
                                                width="30"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M97.12 362.63c-8.69-8.69-4.16-6.24-25.12-11.85-9.51-2.55-17.87-7.45-25.43-13.32L1.2 448.7c-4.39 10.77 3.81 22.47 15.43 22.03l52.69-2.01L105.56 507c8 8.44 22.04 5.81 26.43-4.96l52.05-127.62c-10.84 6.04-22.87 9.58-35.31 9.58-19.5 0-37.82-7.59-51.61-21.37zM382.8 448.7l-45.37-111.24c-7.56 5.88-15.92 10.77-25.43 13.32-21.07 5.64-16.45 3.18-25.12 11.85-13.79 13.78-32.12 21.37-51.62 21.37-12.44 0-24.47-3.55-35.31-9.58L252 502.04c4.39 10.77 18.44 13.4 26.43 4.96l36.25-38.28 52.69 2.01c11.62.44 19.82-11.27 15.43-22.03zM263 340c15.28-15.55 17.03-14.21 38.79-20.14 13.89-3.79 24.75-14.84 28.47-28.98 7.48-28.4 5.54-24.97 25.95-45.75 10.17-10.35 14.14-25.44 10.42-39.58-7.47-28.38-7.48-24.42 0-52.83 3.72-14.14-.25-29.23-10.42-39.58-20.41-20.78-18.47-17.36-25.95-45.75-3.72-14.14-14.58-25.19-28.47-28.98-27.88-7.61-24.52-5.62-44.95-26.41-10.17-10.35-25-14.4-38.89-10.61-27.87 7.6-23.98 7.61-51.9 0-13.89-3.79-28.72.25-38.89 10.61-20.41 20.78-17.05 18.8-44.94 26.41-13.89 3.79-24.75 14.84-28.47 28.98-7.47 28.39-5.54 24.97-25.95 45.75-10.17 10.35-14.15 25.44-10.42 39.58 7.47 28.36 7.48 24.4 0 52.82-3.72 14.14.25 29.23 10.42 39.59 20.41 20.78 18.47 17.35 25.95 45.75 3.72 14.14 14.58 25.19 28.47 28.98C104.6 325.96 106.27 325 121 340c13.23 13.47 33.84 15.88 49.74 5.82a39.676 39.676 0 0 1 42.53 0c15.89 10.06 36.5 7.65 49.73-5.82zM97.66 175.96c0-53.03 42.24-96.02 94.34-96.02s94.34 42.99 94.34 96.02-42.24 96.02-94.34 96.02-94.34-42.99-94.34-96.02z"
                                                  key="0"
                                                />
                                              </svg>
                                            </IconBase>
                                          </FaAward>
                                        </MilestoneIcon>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </Container>
                            <CardText
                              as="div"
                            >
                              <div
                                className="card-text"
                              >
                                <MilestoneCardBody
                                  milestone={
                                    Object {
                                      "grade": Object {
                                        "difficulty": 7,
                                        "style": "TOP_ROPE",
                                      },
                                      "unit": "grade",
                                    }
                                  }
                                >
                                  New milestone - 
                                  first 5.7
                                </MilestoneCardBody>
                              </div>
                            </CardText>
                          </div>
                        </CardBody>
                      </div>
                    </Card>
                  </Route>
                </LinkContainer>
              </withRouter(LinkContainer)>
            </FeedItemCard>
            <FeedItemCard
              feedItem={
                Object {
                  "data": Object {
                    "_type": "session",
                    "value": Object {
                      "key": "sessionA",
                      "value": Object {
                        "_type": "session",
                        "customRoutes": Array [
                          Object {
                            "count": 1,
                            "key": "routeA",
                            "partials": Object {},
                          },
                        ],
                        "gymId": "gymA",
                        "standardRoutes": Array [],
                        "startTime": 0,
                        "uid": "myUid",
                      },
                    },
                  },
                  "date": 0,
                  "link": "/sessions/sessionA",
                  "uid": "myUid",
                }
              }
              gyms={
                Array [
                  Object {
                    "key": "gymA",
                    "value": Object {
                      "BOULDER_HEIGHT": "",
                      "LEAD_HEIGHT": "",
                      "TOP_ROPE_HEIGHT": "",
                      "_type": "gym",
                      "name": "",
                      "owner": "myUid",
                    },
                  },
                ]
              }
              key="2"
              routes={
                Array [
                  Object {
                    "key": "routeA",
                    "value": Object {
                      "_type": "route",
                      "grade": Object {
                        "difficulty": 7,
                        "style": "TOP_ROPE",
                      },
                      "gymId": "gymA",
                      "isRetired": false,
                      "name": "Unnamed",
                    },
                  },
                ]
              }
              sessions={
                Array [
                  Object {
                    "key": "sessionA",
                    "value": Object {
                      "_type": "session",
                      "customRoutes": Array [
                        Object {
                          "count": 1,
                          "key": "routeA",
                          "partials": Object {},
                        },
                      ],
                      "gymId": "gymA",
                      "standardRoutes": Array [],
                      "startTime": 0,
                      "uid": "myUid",
                    },
                  },
                ]
              }
              uid="myUid"
              users={
                Array [
                  Object {
                    "key": "myUserKey",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [
                        "uid0",
                        "uid1",
                        "uid2",
                        "uid3",
                        "uid4",
                      ],
                      "hiatuses": Array [],
                      "name": "Mr. User",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "myUid",
                    },
                  },
                  Object {
                    "key": "uid0-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 0",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid0",
                    },
                  },
                  Object {
                    "key": "uid1-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 1",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid1",
                    },
                  },
                  Object {
                    "key": "uid2-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 2",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid2",
                    },
                  },
                  Object {
                    "key": "uid3-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 3",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid3",
                    },
                  },
                  Object {
                    "key": "uid4-key",
                    "value": Object {
                      "_type": "user",
                      "friends": Array [],
                      "hiatuses": Array [],
                      "name": "user 4",
                      "preferences": Object {
                        "activityCalendar": Object {
                          "friends": Array [],
                          "includeWorkouts": true,
                          "mode": "User only",
                          "splitWorkouts": true,
                        },
                      },
                      "uid": "uid4",
                    },
                  },
                ]
              }
              workouts={
                Array [
                  Object {
                    "key": "workoutA",
                    "value": Object {
                      "_type": "workout",
                      "categories": Array [],
                      "intensity": 0,
                      "startTime": 1671926400000,
                      "uid": "myUid",
                    },
                  },
                ]
              }
            >
              <withRouter(LinkContainer)
                className="link-card"
                to="/sessions/sessionA"
              >
                <LinkContainer
                  activeClassName="active"
                  className="link-card"
                  exact={false}
                  history={
                    Object {
                      "action": "REPLACE",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "?n=60",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "?n=60",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                  location={
                    Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "?n=60",
                    }
                  }
                  match={
                    Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    }
                  }
                  replace={false}
                  strict={false}
                  to="/sessions/sessionA"
                >
                  <Route
                    exact={false}
                    path="/sessions/sessionA"
                    strict={false}
                  >
                    <Card
                      body={false}
                      className="link-card"
                      href="/sessions/sessionA"
                      onClick={[Function]}
                    >
                      <div
                        className="link-card card"
                        href="/sessions/sessionA"
                        onClick={[Function]}
                      >
                        <CardBody>
                          <div
                            className="card-body"
                          >
                            <Container
                              fluid={false}
                            >
                              <div
                                className="container"
                              >
                                <Row>
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      xs={10}
                                    >
                                      <div
                                        className="col-10"
                                      >
                                        <CardTitle
                                          className="w-100"
                                        >
                                          <ForwardRef
                                            className="w-100 card-title"
                                          >
                                            <div
                                              className="w-100 card-title h5"
                                            >
                                              You
                                            </div>
                                          </ForwardRef>
                                        </CardTitle>
                                        <CardSubtitle>
                                          <ForwardRef
                                            className="card-subtitle"
                                          >
                                            <div
                                              className="card-subtitle h6"
                                            >
                                              Dec 31st 1969
                                            </div>
                                          </ForwardRef>
                                        </CardSubtitle>
                                      </div>
                                    </Col>
                                    <Col
                                      className="d-flex flex-row justify-content-end"
                                      xs={2}
                                    >
                                      <div
                                        className="d-flex flex-row justify-content-end col-2"
                                      >
                                        <SessionIcon
                                          session={
                                            Object {
                                              "key": "sessionA",
                                              "value": Object {
                                                "_type": "session",
                                                "customRoutes": Array [
                                                  Object {
                                                    "count": 1,
                                                    "key": "routeA",
                                                    "partials": Object {},
                                                  },
                                                ],
                                                "gymId": "gymA",
                                                "standardRoutes": Array [],
                                                "startTime": 0,
                                                "uid": "myUid",
                                              },
                                            }
                                          }
                                        >
                                          <FaPersonFalling>
                                            <IconBase
                                              attr={
                                                Object {
                                                  "viewBox": "0 0 512 512",
                                                }
                                              }
                                            >
                                              <svg
                                                fill="currentColor"
                                                height="30"
                                                stroke="currentColor"
                                                strokeWidth="0"
                                                style={
                                                  Object {
                                                    "color": "forestgreen",
                                                  }
                                                }
                                                viewBox="0 0 512 512"
                                                width="30"
                                                xmlns="http://www.w3.org/2000/svg"
                                              >
                                                <path
                                                  d="M288 0c17.7 0 32 14.3 32 32l0 9.8c0 54.6-27.9 104.6-72.5 133.6l.2 .3L304.5 256l87.5 0c15.1 0 29.3 7.1 38.4 19.2l43.2 57.6c10.6 14.1 7.7 34.2-6.4 44.8s-34.2 7.7-44.8-6.4L384 320l-96 0h-1.4l92.3 142.6c9.6 14.8 5.4 34.6-9.5 44.3s-34.6 5.4-44.3-9.5L164.5 249.2c-2.9 9.2-4.5 19-4.5 29l0 73.8c0 17.7-14.3 32-32 32s-32-14.3-32-32V278.2c0-65.1 39.6-123.7 100.1-147.9C232.3 115.8 256 80.8 256 41.8l0-9.8c0-17.7 14.3-32 32-32zM112 32a48 48 0 1 1 0 96 48 48 0 1 1 0-96z"
                                                  key="0"
                                                />
                                              </svg>
                                            </IconBase>
                                          </FaPersonFalling>
                                        </SessionIcon>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </Container>
                            <CardText
                              as="div"
                            >
                              <div
                                className="card-text"
                              >
                                <SessionCardBody
                                  gyms={
                                    Object {
                                      "gymA": Object {
                                        "BOULDER_HEIGHT": "",
                                        "LEAD_HEIGHT": "",
                                        "TOP_ROPE_HEIGHT": "",
                                        "_type": "gym",
                                        "name": "",
                                        "owner": "myUid",
                                      },
                                    }
                                  }
                                  routes={
                                    Object {
                                      "routeA": Object {
                                        "_type": "route",
                                        "grade": Object {
                                          "difficulty": 7,
                                          "style": "TOP_ROPE",
                                        },
                                        "gymId": "gymA",
                                        "isRetired": false,
                                        "name": "Unnamed",
                                      },
                                    }
                                  }
                                  session={
                                    Object {
                                      "key": "sessionA",
                                      "value": Object {
                                        "_type": "session",
                                        "customRoutes": Array [
                                          Object {
                                            "count": 1,
                                            "key": "routeA",
                                            "partials": Object {},
                                          },
                                        ],
                                        "gymId": "gymA",
                                        "standardRoutes": Array [],
                                        "startTime": 0,
                                        "uid": "myUid",
                                      },
                                    }
                                  }
                                >
                                  <div
                                    className="session-card"
                                  >
                                    <Container
                                      fluid={false}
                                    >
                                      <div
                                        className="container"
                                      >
                                        <Row>
                                          <div
                                            className="row"
                                          >
                                            <Col
                                              xs={12}
                                            >
                                              <div
                                                className="col-12"
                                              >
                                                Climbing session at 
                                                <b>
                                                  Unknown gym
                                                </b>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                        <Row
                                          className="session-summary-row"
                                        >
                                          <div
                                            className="session-summary-row row"
                                          >
                                            <Col
                                              xs={4}
                                            >
                                              <div
                                                className="col-4"
                                              >
                                                <Card
                                                  body={false}
                                                >
                                                  <div
                                                    className="card"
                                                  >
                                                    <CardBody>
                                                      <div
                                                        className="card-body"
                                                      >
                                                        <CardTitle>
                                                          <ForwardRef
                                                            className="card-title"
                                                          >
                                                            <div
                                                              className="card-title h5"
                                                            >
                                                              Ongoing
                                                            </div>
                                                          </ForwardRef>
                                                        </CardTitle>
                                                      </div>
                                                    </CardBody>
                                                  </div>
                                                </Card>
                                              </div>
                                            </Col>
                                            <Col
                                              xs={4}
                                            >
                                              <div
                                                className="col-4"
                                              >
                                                <Card
                                                  body={false}
                                                >
                                                  <div
                                                    className="card"
                                                  >
                                                    <CardBody>
                                                      <div
                                                        className="card-body"
                                                      >
                                                        <CardTitle>
                                                          <ForwardRef
                                                            className="card-title"
                                                          >
                                                            <div
                                                              className="card-title h5"
                                                            >
                                                              5.7
                                                            </div>
                                                          </ForwardRef>
                                                        </CardTitle>
                                                        <CardSubtitle>
                                                          <ForwardRef
                                                            className="card-subtitle"
                                                          >
                                                            <div
                                                              className="card-subtitle h6"
                                                            >
                                                              Max Grade
                                                            </div>
                                                          </ForwardRef>
                                                        </CardSubtitle>
                                                      </div>
                                                    </CardBody>
                                                  </div>
                                                </Card>
                                              </div>
                                            </Col>
                                            <Col
                                              xs={4}
                                            >
                                              <div
                                                className="col-4"
                                              >
                                                <Card
                                                  body={false}
                                                >
                                                  <div
                                                    className="card"
                                                  >
                                                    <CardBody>
                                                      <div
                                                        className="card-body"
                                                      >
                                                        <CardTitle>
                                                          <ForwardRef
                                                            className="card-title"
                                                          >
                                                            <div
                                                              className="card-title h5"
                                                            >
                                                              0
                                                              ft
                                                            </div>
                                                          </ForwardRef>
                                                        </CardTitle>
                                                        <CardSubtitle>
                                                          <ForwardRef
                                                            className="card-subtitle"
                                                          >
                                                            <div
                                                              className="card-subtitle h6"
                                                            >
                                                              Distance
                                                            </div>
                                                          </ForwardRef>
                                                        </CardSubtitle>
                                                      </div>
                                                    </CardBody>
                                                  </div>
                                                </Card>
                                              </div>
                                            </Col>
                                          </div>
                                        </Row>
                                      </div>
                                    </Container>
                                  </div>
                                </SessionCardBody>
                              </div>
                            </CardText>
                          </div>
                        </CardBody>
                      </div>
                    </Card>
                  </Route>
                </LinkContainer>
              </withRouter(LinkContainer)>
            </FeedItemCard>
          </div>
        </div>
      </InfiniteScroll>
    </div>
  </ActivityFeed>
</UserHome>
`;
